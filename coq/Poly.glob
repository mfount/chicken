DIGEST 059d54f92e3d3bfd5d3e6d8bd1310863
FPoly
R354:358 Lists <> <> lib
ind 905:912 <> boollist
constr 928:935 <> bool_nil
constr 952:960 <> bool_cons
R939:946 Poly <> boollist ind
R984:991 Poly <> boollist ind
R972:979 Poly <> boollist ind
R964:967 Basics <> bool ind
ind 1478:1481 <> list
constr 1506:1508 <> nil
constr 1523:1526 <> cons
R1512:1515 Poly <> list ind
R1545:1548 Poly <> list ind
R1535:1538 Poly <> list ind
R2741:2743 Poly <> nil constr
R2793:2796 Poly <> cons constr
R3204:3207 Poly <> cons constr
R3216:3219 Poly <> cons constr
R3228:3230 Poly <> nil constr
R3232:3234 Coq.Init.Datatypes <> nat ind
R3221:3223 Coq.Init.Datatypes <> nat ind
R3209:3211 Coq.Init.Datatypes <> nat ind
def 3627:3632 <> length
R3646:3649 Poly <> list ind
R3651:3651 Poly <> X var
R3656:3658 Coq.Init.Datatypes <> nat ind
R3671:3671 Poly <> l var
R3682:3684 Poly <> nil constr
R3700:3703 Poly <> cons constr
R3712:3712 Coq.Init.Datatypes <> S constr
R3715:3720 Poly <> length def
R3722:3722 Poly <> X var
def 4259:4270 <> test_length1
R4324:4326 Coq.Init.Logic <> :type_scope:x_'='_x not
R4278:4283 Poly <> length def
R4290:4293 Poly <> cons constr
R4302:4305 Poly <> cons constr
R4314:4316 Poly <> nil constr
R4318:4320 Coq.Init.Datatypes <> nat ind
R4307:4309 Coq.Init.Datatypes <> nat ind
R4295:4297 Coq.Init.Datatypes <> nat ind
R4285:4287 Coq.Init.Datatypes <> nat ind
def 4483:4494 <> test_length2
R4541:4543 Coq.Init.Logic <> :type_scope:x_'='_x not
R4502:4507 Poly <> length def
R4515:4518 Poly <> cons constr
R4531:4533 Poly <> nil constr
R4535:4538 Basics <> bool ind
R4525:4528 Basics <> true constr
R4520:4523 Basics <> bool ind
R4509:4512 Basics <> bool ind
def 4720:4722 <> app
R4744:4747 Poly <> list ind
R4749:4749 Poly <> X var
R4771:4774 Poly <> list ind
R4776:4776 Poly <> X var
R4790:4791 Poly <> l1 var
R4802:4804 Poly <> nil constr
R4814:4815 Poly <> l2 var
R4821:4824 Poly <> cons constr
R4833:4836 Poly <> cons constr
R4843:4845 Poly <> app def
R4851:4852 Poly <> l2 var
R4847:4847 Poly <> X var
R4838:4838 Poly <> X var
def 4872:4875 <> snoc
R4889:4892 Poly <> list ind
R4894:4894 Poly <> X var
R4900:4900 Poly <> X var
R4906:4909 Poly <> list ind
R4911:4911 Poly <> X var
R4925:4925 Poly <> l var
R4936:4938 Poly <> nil constr
R4948:4951 Poly <> cons constr
R4958:4960 Poly <> nil constr
R4962:4962 Poly <> X var
R4955:4955 Poly <> v var
R4953:4953 Poly <> X var
R4969:4972 Poly <> cons constr
R4981:4984 Poly <> cons constr
R4991:4994 Poly <> snoc def
R5000:5000 Poly <> v var
R4996:4996 Poly <> X var
R4986:4986 Poly <> X var
def 5020:5022 <> rev
R5036:5039 Poly <> list ind
R5041:5041 Poly <> X var
R5046:5049 Poly <> list ind
R5051:5051 Poly <> X var
R5064:5064 Poly <> l var
R5075:5077 Poly <> nil constr
R5087:5089 Poly <> nil constr
R5091:5091 Poly <> X var
R5097:5100 Poly <> cons constr
R5109:5112 Poly <> snoc def
R5117:5119 Poly <> rev def
R5121:5121 Poly <> X var
R5114:5114 Poly <> X var
def 5146:5154 <> test_rev1
R5205:5210 Coq.Init.Logic <> :type_scope:x_'='_x not
R5244:5244 Coq.Init.Logic <> :type_scope:x_'='_x not
R5162:5164 Poly <> rev def
R5171:5174 Poly <> cons constr
R5183:5186 Poly <> cons constr
R5195:5197 Poly <> nil constr
R5199:5201 Coq.Init.Datatypes <> nat ind
R5188:5190 Coq.Init.Datatypes <> nat ind
R5176:5178 Coq.Init.Datatypes <> nat ind
R5166:5168 Coq.Init.Datatypes <> nat ind
R5211:5214 Poly <> cons constr
R5223:5226 Poly <> cons constr
R5235:5237 Poly <> nil constr
R5239:5241 Coq.Init.Datatypes <> nat ind
R5228:5230 Coq.Init.Datatypes <> nat ind
R5216:5218 Coq.Init.Datatypes <> nat ind
def 5282:5290 <> test_rev2
R5314:5316 Coq.Init.Logic <> :type_scope:x_'='_x not
R5295:5297 Poly <> rev def
R5305:5307 Poly <> nil constr
R5309:5312 Basics <> bool ind
R5299:5302 Basics <> bool ind
R5317:5319 Poly <> nil constr
R5321:5324 Basics <> bool ind
mod 5361:5369 <> MumbleBaz
ind 5492:5497 MumbleBaz mumble
constr 5513:5513 MumbleBaz a
constr 5528:5528 MumbleBaz b
constr 5560:5560 MumbleBaz c
R5517:5522 Poly <> mumble ind
R5549:5554 Poly <> mumble ind
R5542:5544 Coq.Init.Datatypes <> nat ind
R5532:5537 Poly <> mumble ind
R5564:5569 Poly <> mumble ind
ind 5582:5588 MumbleBaz grumble
constr 5613:5613 MumbleBaz d
constr 5641:5641 MumbleBaz e
R5627:5633 Poly <> grumble ind
R5617:5622 Poly MumbleBaz mumble ind
R5650:5656 Poly <> grumble ind
ind 6053:6055 MumbleBaz baz
constr 6072:6072 MumbleBaz x
constr 6092:6092 MumbleBaz y
R6083:6085 Poly <> baz ind
R6076:6078 Poly <> baz ind
R6111:6113 Poly <> baz ind
R6103:6106 Basics <> bool ind
R6096:6098 Poly <> baz ind
R6205:6213 Poly MumbleBaz <> mod
def 6476:6479 <> app'
R6491:6494 Poly <> list ind
R6496:6496 Poly <> X var
R6509:6510 Poly <> l1 var
R6521:6523 Poly <> nil constr
R6533:6534 Poly <> l2 var
R6540:6543 Poly <> cons constr
R6552:6555 Poly <> cons constr
R6562:6565 Poly <> app' def
R6571:6572 Poly <> l2 var
R6567:6567 Poly <> X var
R6557:6557 Poly <> X var
R6662:6665 Poly <> app' def
R6729:6731 Poly <> app def
def 9376:9382 <> length'
R9396:9399 Poly <> list ind
R9401:9401 Poly <> X var
R9406:9408 Coq.Init.Datatypes <> nat ind
R9421:9421 Poly <> l var
R9432:9434 Poly <> nil constr
R9450:9453 Poly <> cons constr
R9462:9462 Coq.Init.Datatypes <> S constr
R9465:9471 Poly <> length' def
def 9760:9766 <> list123
R9773:9776 Poly <> cons constr
R9785:9788 Poly <> cons constr
R9797:9800 Poly <> cons constr
R9809:9811 Poly <> nil constr
R9813:9815 Coq.Init.Datatypes <> nat ind
R9802:9804 Coq.Init.Datatypes <> nat ind
R9790:9792 Coq.Init.Datatypes <> nat ind
R9778:9780 Coq.Init.Datatypes <> nat ind
def 9889:9896 <> list123'
R9901:9904 Poly <> cons constr
R9911:9914 Poly <> cons constr
R9921:9924 Poly <> cons constr
R9931:9933 Poly <> nil constr
R10419:10421 Poly <> nil constr
R10419:10421 Poly <> nil constr
R10438:10441 Poly <> cons constr
R10438:10441 Poly <> cons constr
R10523:10528 Poly <> length def
R10523:10528 Poly <> length def
R10547:10549 Poly <> app def
R10547:10549 Poly <> app def
R10572:10574 Poly <> rev def
R10572:10574 Poly <> rev def
R10594:10597 Poly <> snoc def
R10594:10597 Poly <> snoc def
def 10659:10667 <> list123''
R10672:10675 Poly <> cons constr
R10680:10683 Poly <> cons constr
R10688:10691 Poly <> cons constr
R10695:10697 Poly <> nil constr
R10709:10714 Poly <> length def
R10716:10724 Poly <> list123'' def
def 10918:10925 <> length''
R10939:10942 Poly <> list ind
R10944:10944 Poly <> X var
R10949:10951 Coq.Init.Datatypes <> nat ind
R10964:10964 Poly <> l var
R10975:10977 Poly <> nil constr
R10993:10996 Poly <> cons constr
R11005:11005 Coq.Init.Datatypes <> S constr
R11008:11015 Poly <> length'' def
def 12042:12046 <> mynil
R12050:12053 Poly <> list ind
R12055:12057 Coq.Init.Datatypes <> nat ind
R12062:12064 Poly <> nil constr
R12193:12195 Poly <> nil constr
def 12210:12215 <> mynil'
R12221:12223 Poly <> nil constr
R12225:12227 Coq.Init.Datatypes <> nat ind
R12520:12523 Poly <> cons constr
not 12507 <> ::x_'::'_x
R12605:12607 Poly <> nil constr
not 12596 <> ::'['_']'
R12640:12643 Poly <> cons constr
R12651:12654 Poly <> cons constr
R12658:12659 Poly <> ::'['_']' not
not 12619 <> ::'['_x_';'_'..'_';'_x_']'
R12689:12691 Poly <> app def
not 12676 <> ::x_'++'_x
def 12824:12833 <> list123'''
R12838:12838 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12840:12841 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12843:12844 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12846:12846 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 13199:13204 <> repeat
R13222:13222 Poly <> X var
R13234:13236 Coq.Init.Datatypes <> nat ind
R13241:13244 Poly <> list ind
R13246:13246 Poly <> X var
R13272:13276 Basics <> admit prfax
def 13288:13299 <> test_repeat1
R13317:13319 Coq.Init.Logic <> :type_scope:x_'='_x not
R13304:13309 Poly <> repeat def
R13311:13314 Basics <> true constr
R13320:13323 Poly <> cons constr
R13331:13334 Poly <> cons constr
R13341:13343 Poly <> nil constr
R13336:13339 Basics <> true constr
R13325:13328 Basics <> true constr
prf 13386:13392 <> nil_app
R13420:13423 Poly <> list ind
R13425:13425 Poly <> X var
R13438:13440 Coq.Init.Logic <> :type_scope:x_'='_x not
R13430:13432 Poly <> app def
R13437:13437 Poly <> l var
R13434:13435 Poly <> ::'['_']' not
R13441:13441 Poly <> l var
prf 13491:13498 <> rev_snoc
R13551:13551 Poly <> X var
R13586:13589 Poly <> list ind
R13591:13591 Poly <> X var
R13610:13612 Coq.Init.Logic <> :type_scope:x_'='_x not
R13596:13598 Poly <> rev def
R13601:13604 Poly <> snoc def
R13608:13608 Poly <> v var
R13606:13606 Poly <> s var
R13614:13618 Poly <> ::x_'::'_x not
R13624:13624 Poly <> ::x_'::'_x not
R13613:13613 Poly <> v var
R13619:13621 Poly <> rev def
R13623:13623 Poly <> s var
prf 13674:13687 <> rev_involutive
R13719:13722 Poly <> list ind
R13724:13724 Poly <> X var
R13740:13742 Coq.Init.Logic <> :type_scope:x_'='_x not
R13729:13731 Poly <> rev def
R13734:13736 Poly <> rev def
R13738:13738 Poly <> l var
R13743:13743 Poly <> l var
prf 13791:13806 <> snoc_with_append
R13867:13870 Poly <> list ind
R13872:13872 Poly <> X var
R13911:13911 Poly <> X var
R13933:13935 Coq.Init.Logic <> :type_scope:x_'='_x not
R13916:13919 Poly <> snoc def
R13932:13932 Poly <> v var
R13924:13927 Poly <> ::x_'++'_x not
R13922:13923 Poly <> l1 var
R13928:13929 Poly <> l2 var
R13938:13942 Poly <> ::x_'++'_x not
R13952:13952 Poly <> ::x_'++'_x not
R13936:13937 Poly <> l1 var
R13943:13946 Poly <> snoc def
R13951:13951 Poly <> v var
R13948:13949 Poly <> l2 var
ind 14276:14279 <> prod
constr 14306:14309 <> pair
R14323:14326 Poly <> prod ind
R14344:14347 Poly <> pair constr
R14344:14347 Poly <> pair constr
R14494:14497 Poly <> pair constr
not 14478 <> ::'('_x_','_x_')'
R14630:14633 Poly <> prod ind
not 14618 <> :type_scope:x_'*'_x
def 15256:15258 <> fst
R15279:15281 Poly <> :type_scope:x_'*'_x not
R15278:15278 Poly <> X var
R15282:15282 Poly <> Y var
R15287:15287 Poly <> X var
R15300:15300 Poly <> p var
R15307:15307 Poly <> ::'('_x_','_x_')' not
R15309:15309 Poly <> ::'('_x_','_x_')' not
R15311:15311 Poly <> ::'('_x_','_x_')' not
def 15335:15337 <> snd
R15358:15360 Poly <> :type_scope:x_'*'_x not
R15357:15357 Poly <> X var
R15361:15361 Poly <> Y var
R15366:15366 Poly <> Y var
R15379:15379 Poly <> p var
R15386:15386 Poly <> ::'('_x_','_x_')' not
R15388:15388 Poly <> ::'('_x_','_x_')' not
R15390:15390 Poly <> ::'('_x_','_x_')' not
def 15731:15737 <> combine
R15758:15761 Poly <> list ind
R15763:15763 Poly <> X var
R15772:15775 Poly <> list ind
R15777:15777 Poly <> Y var
R15793:15796 Poly <> list ind
R15800:15800 Poly <> :type_scope:x_'*'_x not
R15799:15799 Poly <> X var
R15801:15801 Poly <> Y var
R15815:15815 Poly <> ::'('_x_','_x_')' not
R15818:15818 Poly <> ::'('_x_','_x_')' not
R15821:15821 Poly <> ::'('_x_','_x_')' not
R15816:15817 Poly <> lx var
R15819:15820 Poly <> ly var
R15832:15832 Poly <> ::'('_x_','_x_')' not
R15835:15835 Poly <> ::'('_x_','_x_')' not
R15837:15837 Poly <> ::'('_x_','_x_')' not
R15833:15834 Poly <> ::'['_']' not
R15842:15843 Poly <> ::'['_']' not
R15849:15849 Poly <> ::'('_x_','_x_')' not
R15851:15851 Poly <> ::'('_x_','_x_')' not
R15854:15854 Poly <> ::'('_x_','_x_')' not
R15852:15853 Poly <> ::'['_']' not
R15859:15860 Poly <> ::'['_']' not
R15866:15866 Poly <> ::'('_x_','_x_')' not
R15872:15873 Poly <> ::'('_x_','_x_')' not
R15879:15879 Poly <> ::'('_x_','_x_')' not
R15868:15869 Poly <> ::x_'::'_x not
R15875:15876 Poly <> ::x_'::'_x not
R15889:15893 Poly <> ::x_'::'_x not
R15907:15907 Poly <> ::x_'::'_x not
R15884:15884 Poly <> ::'('_x_','_x_')' not
R15886:15886 Poly <> ::'('_x_','_x_')' not
R15888:15888 Poly <> ::'('_x_','_x_')' not
R15894:15900 Poly <> combine def
def 16617:16621 <> split
R16652:16655 Poly <> list ind
R16659:16659 Poly <> :type_scope:x_'*'_x not
R16658:16658 Poly <> X var
R16660:16660 Poly <> Y var
R16677:16677 Poly <> :type_scope:x_'*'_x not
R16684:16688 Poly <> :type_scope:x_'*'_x not
R16695:16695 Poly <> :type_scope:x_'*'_x not
R16678:16681 Poly <> list ind
R16683:16683 Poly <> X var
R16689:16692 Poly <> list ind
R16694:16694 Poly <> Y var
R16719:16723 Basics <> admit prfax
def 16735:16744 <> test_split
R16776:16778 Coq.Init.Logic <> :type_scope:x_'='_x not
R16749:16753 Poly <> split def
R16755:16755 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16765:16765 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16775:16775 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16766:16766 Poly <> ::'('_x_','_x_')' not
R16768:16768 Poly <> ::'('_x_','_x_')' not
R16774:16774 Poly <> ::'('_x_','_x_')' not
R16769:16773 Basics <> false constr
R16756:16756 Poly <> ::'('_x_','_x_')' not
R16758:16758 Poly <> ::'('_x_','_x_')' not
R16764:16764 Poly <> ::'('_x_','_x_')' not
R16759:16763 Basics <> false constr
R16779:16779 Poly <> ::'('_x_','_x_')' not
R16785:16785 Poly <> ::'('_x_','_x_')' not
R16799:16799 Poly <> ::'('_x_','_x_')' not
R16780:16780 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16782:16782 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16784:16784 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16786:16786 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16792:16792 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16798:16798 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16793:16797 Basics <> false constr
R16787:16791 Basics <> false constr
ind 17107:17112 <> option
constr 17137:17140 <> Some
constr 17162:17165 <> None
R17149:17154 Poly <> option ind
R17169:17174 Poly <> option ind
R17190:17193 Poly <> Some constr
R17190:17193 Poly <> Some constr
R17213:17216 Poly <> None constr
R17213:17216 Poly <> None constr
def 17338:17342 <> index
R17360:17362 Coq.Init.Datatypes <> nat ind
R17385:17388 Poly <> list ind
R17390:17390 Poly <> X var
R17395:17400 Poly <> option ind
R17402:17402 Poly <> X var
R17415:17415 Poly <> l var
R17426:17427 Poly <> ::'['_']' not
R17432:17435 Poly <> None constr
R17442:17445 Poly <> ::x_'::'_x not
R17455:17461 Basics <> beq_nat def
R17465:17465 Coq.Init.Datatypes <> O constr
R17463:17463 Poly <> n var
R17484:17488 Poly <> index def
R17491:17494 Coq.Init.Peano <> pred def
R17496:17496 Poly <> n var
R17472:17475 Poly <> Some constr
def 17518:17528 <> test_index1
R17552:17555 Coq.Init.Logic <> :type_scope:x_'='_x not
R17535:17539 Poly <> index def
R17543:17543 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17545:17545 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17547:17547 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17549:17549 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17551:17551 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17556:17559 Poly <> Some constr
def 17598:17608 <> test_index2
R17633:17636 Coq.Init.Logic <> :type_scope:x_'='_x not
R17615:17619 Poly <> index def
R17624:17624 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17628:17628 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17632:17632 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17629:17629 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17631:17631 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17625:17625 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17627:17627 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17637:17640 Poly <> Some constr
R17642:17642 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17644:17644 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 17681:17691 <> test_index3
R17713:17716 Coq.Init.Logic <> :type_scope:x_'='_x not
R17698:17702 Poly <> index def
R17707:17707 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17712:17712 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17708:17711 Basics <> true constr
R17717:17720 Poly <> None constr
def 17973:17978 <> hd_opt
R17996:17999 Poly <> list ind
R18001:18001 Poly <> X var
R18007:18012 Poly <> option ind
R18014:18014 Poly <> X var
R18027:18027 Poly <> l var
R18041:18042 Poly <> ::x_'::'_x not
R18048:18051 Poly <> Some constr
R18061:18062 Poly <> ::'['_']' not
R18067:18070 Poly <> None constr
R18209:18214 Poly <> hd_opt def
def 18226:18237 <> test_hd_opt1
R18254:18256 Coq.Init.Logic <> :type_scope:x_'='_x not
R18242:18247 Poly <> hd_opt def
R18249:18249 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18251:18251 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18253:18253 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18257:18260 Poly <> Some constr
def 18303:18314 <> test_hd_opt2
R18337:18340 Coq.Init.Logic <> :type_scope:x_'='_x not
R18320:18325 Poly <> hd_opt def
R18328:18328 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18332:18332 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18336:18336 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18333:18333 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18335:18335 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18329:18329 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18331:18331 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18341:18344 Poly <> Some constr
R18346:18346 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18348:18348 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 19006:19015 <> doit3times
R19032:19032 Poly <> X var
R19029:19029 Poly <> X var
R19038:19038 Poly <> X var
R19043:19043 Poly <> X var
R19050:19050 Poly <> f var
R19053:19053 Poly <> f var
R19056:19056 Poly <> f var
R19058:19058 Poly <> n var
R19217:19226 Poly <> doit3times def
def 19298:19312 <> test_doit3times
R19336:19338 Coq.Init.Logic <> :type_scope:x_'='_x not
R19315:19324 Poly <> doit3times def
R19326:19333 Basics <> minustwo def
def 19377:19392 <> test_doit3times'
R19415:19417 Coq.Init.Logic <> :type_scope:x_'='_x not
R19395:19404 Poly <> doit3times def
R19411:19414 Basics <> true constr
R19406:19409 Basics <> negb def
R19418:19422 Basics <> false constr
R19716:19719 Coq.Init.Peano <> plus def
def 20441:20445 <> plus3
R20450:20453 Coq.Init.Peano <> plus def
R20464:20468 Poly <> plus3 def
def 20480:20489 <> test_plus3
R20503:20505 Coq.Init.Logic <> :type_scope:x_'='_x not
R20496:20500 Poly <> plus3 def
def 20543:20553 <> test_plus3'
R20577:20579 Coq.Init.Logic <> :type_scope:x_'='_x not
R20559:20568 Poly <> doit3times def
R20570:20574 Poly <> plus3 def
def 20617:20628 <> test_plus3''
R20654:20656 Coq.Init.Logic <> :type_scope:x_'='_x not
R20633:20642 Poly <> doit3times def
R20645:20648 Coq.Init.Peano <> plus def
def 21581:21590 <> prod_curry
R21623:21623 Poly <> Z var
R21615:21617 Poly <> :type_scope:x_'*'_x not
R21614:21614 Poly <> X var
R21618:21618 Poly <> Y var
R21631:21631 Poly <> X var
R21639:21639 Poly <> Y var
R21644:21644 Poly <> Z var
R21649:21649 Poly <> f var
R21651:21651 Poly <> ::'('_x_','_x_')' not
R21653:21654 Poly <> ::'('_x_','_x_')' not
R21656:21656 Poly <> ::'('_x_','_x_')' not
R21652:21652 Poly <> x var
R21655:21655 Poly <> y var
def 21801:21812 <> prod_uncurry
R21846:21846 Poly <> Z var
R21841:21841 Poly <> Y var
R21836:21836 Poly <> X var
R21855:21857 Poly <> :type_scope:x_'*'_x not
R21854:21854 Poly <> X var
R21858:21858 Poly <> Y var
R21863:21863 Poly <> Z var
R21889:21893 Basics <> admit prfax
R22031:22040 Poly <> prod_curry def
R22050:22061 Poly <> prod_uncurry def
prf 22073:22085 <> uncurry_curry
R22126:22126 Poly <> Z var
R22121:22121 Poly <> Y var
R22116:22116 Poly <> X var
R22167:22169 Coq.Init.Logic <> :type_scope:x_'='_x not
R22136:22145 Poly <> prod_curry def
R22166:22166 Poly <> y var
R22164:22164 Poly <> x var
R22148:22159 Poly <> prod_uncurry def
R22161:22161 Poly <> f var
R22170:22170 Poly <> f var
R22174:22174 Poly <> y var
R22172:22172 Poly <> x var
prf 22224:22236 <> curry_uncurry
R22309:22309 Poly <> Z var
R22300:22302 Poly <> :type_scope:x_'*'_x not
R22299:22299 Poly <> X var
R22303:22303 Poly <> Y var
R22318:22320 Poly <> :type_scope:x_'*'_x not
R22317:22317 Poly <> X var
R22321:22321 Poly <> Y var
R22356:22358 Coq.Init.Logic <> :type_scope:x_'='_x not
R22327:22338 Poly <> prod_uncurry def
R22355:22355 Poly <> p var
R22341:22350 Poly <> prod_curry def
R22352:22352 Poly <> f var
R22359:22359 Poly <> f var
R22361:22361 Poly <> p var
def 22761:22766 <> filter
R22787:22790 Basics <> bool ind
R22784:22784 Poly <> X var
R22796:22799 Poly <> list ind
R22801:22801 Poly <> X var
R22823:22826 Poly <> list ind
R22828:22828 Poly <> X var
R22842:22842 Poly <> l var
R22853:22854 Poly <> ::'['_']' not
R22863:22864 Poly <> ::'['_']' not
R22871:22874 Poly <> ::x_'::'_x not
R22883:22886 Poly <> test var
R22951:22956 Poly <> filter def
R22958:22961 Poly <> test var
R22896:22900 Poly <> ::x_'::'_x not
R22914:22914 Poly <> ::x_'::'_x not
R22901:22906 Poly <> filter def
R22908:22911 Poly <> test var
def 23142:23153 <> test_filter1
R23178:23180 Coq.Init.Logic <> :type_scope:x_'='_x not
R23156:23161 Poly <> filter def
R23169:23169 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23171:23171 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23173:23173 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23175:23175 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23177:23177 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23163:23167 Basics <> evenb def
R23181:23181 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23183:23183 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23185:23185 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23237:23247 <> length_is_1
R23265:23268 Poly <> list ind
R23270:23270 Poly <> X var
R23275:23278 Basics <> bool ind
R23285:23291 Basics <> beq_nat def
R23294:23299 Poly <> length def
R23301:23301 Poly <> l var
def 23316:23327 <> test_filter2
R23402:23406 Coq.Init.Logic <> :type_scope:x_'='_x not
R23334:23339 Poly <> filter def
R23364:23365 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23372:23373 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23377:23378 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23382:23383 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23391:23392 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23395:23396 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23400:23401 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23397:23397 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23399:23399 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23393:23394 Poly <> ::'['_']' not
R23384:23384 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23386:23386 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23388:23388 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23390:23390 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23379:23379 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23381:23381 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23374:23374 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23376:23376 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23366:23366 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23368:23369 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23371:23371 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23341:23351 Poly <> length_is_1 def
R23407:23408 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23412:23413 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23417:23418 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23422:23423 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23419:23419 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23421:23421 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23414:23414 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23416:23416 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23409:23409 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23411:23411 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23594:23609 <> countoddmembers'
R23614:23617 Poly <> list ind
R23619:23621 Coq.Init.Datatypes <> nat ind
R23626:23628 Coq.Init.Datatypes <> nat ind
R23635:23640 Poly <> length def
R23643:23648 Poly <> filter def
R23655:23655 Poly <> l var
R23650:23653 Basics <> oddb def
def 23668:23689 <> test_countoddmembers'1
R23724:23726 Coq.Init.Logic <> :type_scope:x_'='_x not
R23694:23709 Poly <> countoddmembers' def
R23711:23711 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23713:23713 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23715:23715 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23717:23717 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23719:23719 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23721:23721 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23723:23723 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23764:23785 <> test_countoddmembers'2
R23814:23816 Coq.Init.Logic <> :type_scope:x_'='_x not
R23790:23805 Poly <> countoddmembers' def
R23807:23807 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23809:23809 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23811:23811 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23813:23813 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23854:23875 <> test_countoddmembers'3
R23900:23902 Coq.Init.Logic <> :type_scope:x_'='_x not
R23880:23895 Poly <> countoddmembers' def
R23897:23899 Poly <> nil constr
def 24769:24782 <> test_anon_fun'
R24816:24818 Coq.Init.Logic <> :type_scope:x_'='_x not
R24787:24796 Poly <> doit3times def
R24809:24811 Basics <> :nat_scope:x_'*'_x not
R24808:24808 Poly <> n var
R24812:24812 Poly <> n var
def 24955:24967 <> test_filter2'
R25062:25066 Coq.Init.Logic <> :type_scope:x_'='_x not
R24974:24979 Poly <> filter def
R25024:25025 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25032:25033 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25037:25038 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25042:25043 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25051:25052 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25055:25056 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25060:25061 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25057:25057 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25059:25059 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25053:25054 Poly <> ::'['_']' not
R25044:25044 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25046:25046 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25048:25048 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25050:25050 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25039:25039 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25041:25041 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25034:25034 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25036:25036 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25026:25026 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25028:25029 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25031:25031 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24991:24997 Basics <> beq_nat def
R25000:25005 Poly <> length def
R25007:25007 Poly <> l var
R25067:25068 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25072:25073 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25077:25078 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25082:25083 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25079:25079 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25081:25081 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25074:25074 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25076:25076 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25069:25069 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25071:25071 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25386:25400 <> filter_even_gt7
R25407:25410 Poly <> list ind
R25412:25414 Coq.Init.Datatypes <> nat ind
R25419:25422 Poly <> list ind
R25424:25426 Coq.Init.Datatypes <> nat ind
R25452:25456 Basics <> admit prfax
def 25468:25489 <> test_filter_even_gt7_1
R25530:25532 Coq.Init.Logic <> :type_scope:x_'='_x not
R25495:25509 Poly <> filter_even_gt7 def
R25511:25511 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25513:25513 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25515:25515 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25517:25517 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25519:25519 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25522:25522 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25524:25524 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25527:25527 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25529:25529 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25533:25533 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25536:25536 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25539:25539 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25541:25541 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25583:25604 <> test_filter_even_gt7_2
R25640:25642 Coq.Init.Logic <> :type_scope:x_'='_x not
R25610:25624 Poly <> filter_even_gt7 def
R25626:25626 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25628:25628 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25630:25630 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25632:25632 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25635:25635 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25639:25639 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25643:25644 Poly <> ::'['_']' not
def 26298:26306 <> partition
R26332:26335 Basics <> bool ind
R26327:26327 Poly <> X var
R26343:26346 Poly <> list ind
R26348:26348 Poly <> X var
R26380:26382 Poly <> :type_scope:x_'*'_x not
R26374:26377 Poly <> list ind
R26379:26379 Poly <> X var
R26383:26386 Poly <> list ind
R26388:26388 Poly <> X var
R26412:26416 Basics <> admit prfax
def 26428:26442 <> test_partition1
R26471:26473 Coq.Init.Logic <> :type_scope:x_'='_x not
R26445:26453 Poly <> partition def
R26460:26460 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26462:26462 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26464:26464 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26466:26466 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26468:26468 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26470:26470 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26455:26458 Basics <> oddb def
R26474:26474 Poly <> ::'('_x_','_x_')' not
R26482:26483 Poly <> ::'('_x_','_x_')' not
R26489:26489 Poly <> ::'('_x_','_x_')' not
R26475:26475 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26477:26477 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26479:26479 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26481:26481 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26484:26484 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26486:26486 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26488:26488 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26529:26543 <> test_partition2
R26580:26582 Coq.Init.Logic <> :type_scope:x_'='_x not
R26546:26554 Poly <> partition def
R26573:26573 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26575:26575 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26577:26577 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26579:26579 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26566:26570 Basics <> false constr
R26583:26583 Poly <> ::'('_x_','_x_')' not
R26586:26587 Poly <> ::'('_x_','_x_')' not
R26595:26595 Poly <> ::'('_x_','_x_')' not
R26584:26585 Poly <> ::'['_']' not
R26588:26588 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26590:26590 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26592:26592 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26594:26594 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26784:26786 <> map
R26805:26805 Poly <> Y var
R26802:26802 Poly <> X var
R26811:26814 Poly <> list ind
R26816:26816 Poly <> X var
R26835:26838 Poly <> list ind
R26840:26840 Poly <> Y var
R26854:26854 Poly <> l var
R26865:26866 Poly <> ::'['_']' not
R26875:26876 Poly <> ::'['_']' not
R26883:26886 Poly <> ::x_'::'_x not
R26892:26892 Poly <> ::x_'::'_x not
R26896:26901 Poly <> ::x_'::'_x not
R26909:26909 Poly <> ::x_'::'_x not
R26893:26893 Poly <> f var
R26902:26904 Poly <> map def
R26906:26906 Poly <> f var
def 27137:27145 <> test_map1
R27168:27170 Coq.Init.Logic <> :type_scope:x_'='_x not
R27148:27150 Poly <> map def
R27161:27161 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27163:27163 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27165:27165 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27167:27167 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27153:27156 Coq.Init.Peano <> plus def
R27171:27171 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27173:27173 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27175:27175 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27177:27177 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27486:27494 <> test_map2
R27515:27517 Coq.Init.Logic <> :type_scope:x_'='_x not
R27497:27499 Poly <> map def
R27506:27506 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27508:27508 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27510:27510 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27512:27512 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27514:27514 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27501:27504 Basics <> oddb def
R27518:27518 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27524:27524 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27529:27529 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27535:27535 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27540:27540 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27536:27539 Basics <> true constr
R27530:27534 Basics <> false constr
R27525:27528 Basics <> true constr
R27519:27523 Basics <> false constr
def 27727:27735 <> test_map3
R27783:27787 Coq.Init.Logic <> :type_scope:x_'='_x not
R27742:27744 Poly <> map def
R27774:27774 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27776:27776 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27778:27778 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27780:27780 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27782:27782 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27756:27756 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27764:27764 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27771:27771 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27765:27768 Basics <> oddb def
R27770:27770 Poly <> n var
R27757:27761 Basics <> evenb def
R27763:27763 Poly <> n var
R27788:27788 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27801:27801 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27814:27814 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27827:27827 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27840:27840 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27828:27828 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27834:27834 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27839:27839 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27835:27838 Basics <> true constr
R27829:27833 Basics <> false constr
R27815:27815 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27820:27820 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27826:27826 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27821:27825 Basics <> false constr
R27816:27819 Basics <> true constr
R27802:27802 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27808:27808 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27813:27813 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27809:27812 Basics <> true constr
R27803:27807 Basics <> false constr
R27789:27789 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27794:27794 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27800:27800 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27795:27799 Basics <> false constr
R27790:27793 Basics <> true constr
prf 28039:28045 <> map_rev
R28079:28079 Poly <> Y var
R28074:28074 Poly <> X var
R28087:28090 Poly <> list ind
R28092:28092 Poly <> X var
R28111:28113 Coq.Init.Logic <> :type_scope:x_'='_x not
R28098:28100 Poly <> map def
R28105:28107 Poly <> rev def
R28109:28109 Poly <> l var
R28102:28102 Poly <> f var
R28114:28116 Poly <> rev def
R28119:28121 Poly <> map def
R28125:28125 Poly <> l var
R28123:28123 Poly <> f var
def 28627:28634 <> flat_map
R28655:28658 Poly <> list ind
R28660:28660 Poly <> Y var
R28650:28650 Poly <> X var
R28666:28669 Poly <> list ind
R28671:28671 Poly <> X var
R28696:28699 Poly <> list ind
R28701:28701 Poly <> Y var
R28728:28732 Basics <> admit prfax
def 28744:28757 <> test_flat_map1
R28797:28801 Coq.Init.Logic <> :type_scope:x_'='_x not
R28762:28769 Poly <> flat_map def
R28790:28790 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28792:28792 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28794:28794 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28796:28796 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28781:28781 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28783:28783 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28785:28785 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28787:28787 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28786:28786 Poly <> n var
R28784:28784 Poly <> n var
R28782:28782 Poly <> n var
R28802:28802 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28804:28805 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28807:28808 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28810:28811 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28813:28814 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28816:28817 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28819:28820 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28822:28823 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28825:28826 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28828:28828 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 29033:29042 <> option_map
R29067:29067 Poly <> Y var
R29062:29062 Poly <> X var
R29076:29081 Poly <> option ind
R29083:29083 Poly <> X var
R29110:29115 Poly <> option ind
R29117:29117 Poly <> Y var
R29130:29131 Poly <> xo var
R29144:29147 Poly <> None constr
R29152:29155 Poly <> None constr
R29163:29166 Poly <> Some constr
R29173:29176 Poly <> Some constr
R29179:29179 Poly <> f var
def 30001:30004 <> fold
R30027:30027 Poly <> Y var
R30024:30024 Poly <> Y var
R30021:30021 Poly <> X var
R30033:30036 Poly <> list ind
R30038:30038 Poly <> X var
R30044:30044 Poly <> Y var
R30049:30049 Poly <> Y var
R30062:30062 Poly <> l var
R30073:30075 Poly <> nil constr
R30080:30080 Poly <> b var
R30087:30090 Poly <> ::x_'::'_x not
R30096:30096 Poly <> f var
R30101:30104 Poly <> fold def
R30110:30110 Poly <> b var
R30106:30106 Poly <> f var
R30594:30597 Poly <> fold def
R30599:30602 Basics <> andb def
def 30664:30676 <> fold_example1
R30701:30703 Coq.Init.Logic <> :type_scope:x_'='_x not
R30680:30683 Poly <> fold def
R30690:30690 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30692:30692 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30694:30694 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30696:30696 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30698:30698 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30685:30688 Coq.Init.Peano <> mult def
def 30742:30754 <> fold_example2
R30795:30797 Coq.Init.Logic <> :type_scope:x_'='_x not
R30758:30761 Poly <> fold def
R30791:30794 Basics <> true constr
R30768:30768 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30773:30773 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30778:30778 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30784:30784 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30789:30789 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30785:30788 Basics <> true constr
R30779:30783 Basics <> false constr
R30774:30777 Basics <> true constr
R30769:30772 Basics <> true constr
R30763:30766 Basics <> andb def
R30798:30802 Basics <> false constr
def 30839:30851 <> fold_example3
R30886:30888 Coq.Init.Logic <> :type_scope:x_'='_x not
R30855:30858 Poly <> fold def
R30884:30885 Poly <> ::'['_']' not
R30865:30865 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30869:30869 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30872:30872 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30878:30878 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30882:30882 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30879:30879 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30881:30881 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30873:30873 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30875:30875 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30877:30877 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30870:30871 Poly <> ::'['_']' not
R30866:30866 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30868:30868 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30860:30862 Poly <> app def
R30889:30889 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30891:30891 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30893:30893 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30895:30895 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30897:30897 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 31814:31821 <> constfun
R31837:31837 Poly <> X var
R31847:31847 Poly <> X var
R31842:31844 Coq.Init.Datatypes <> nat ind
R31861:31863 Coq.Init.Datatypes <> nat ind
R31869:31869 Poly <> x var
def 31884:31888 <> ftrue
R31893:31900 Poly <> constfun def
R31902:31905 Basics <> true constr
def 31917:31933 <> constfun_example1
R31944:31946 Coq.Init.Logic <> :type_scope:x_'='_x not
R31937:31941 Poly <> ftrue def
R31947:31950 Basics <> true constr
def 31987:32003 <> constfun_example2
R32022:32024 Coq.Init.Logic <> :type_scope:x_'='_x not
R32008:32015 Poly <> constfun def
def 32368:32375 <> override
R32396:32396 Poly <> X var
R32391:32393 Coq.Init.Datatypes <> nat ind
R32402:32404 Coq.Init.Datatypes <> nat ind
R32410:32410 Poly <> X var
R32420:32420 Poly <> X var
R32415:32417 Coq.Init.Datatypes <> nat ind
R32434:32436 Coq.Init.Datatypes <> nat ind
R32445:32451 Basics <> beq_nat def
R32455:32456 Poly <> k' var
R32453:32453 Poly <> k var
R32470:32470 Poly <> f var
R32472:32473 Poly <> k' var
R32463:32463 Poly <> x var
def 32672:32682 <> fmostlytrue
R32687:32694 Poly <> override def
R32723:32727 Basics <> false constr
R32697:32704 Poly <> override def
R32714:32718 Basics <> false constr
R32706:32710 Poly <> ftrue def
def 32751:32767 <> override_example1
R32784:32786 Coq.Init.Logic <> :type_scope:x_'='_x not
R32771:32781 Poly <> fmostlytrue def
R32787:32790 Basics <> true constr
def 32827:32843 <> override_example2
R32860:32862 Coq.Init.Logic <> :type_scope:x_'='_x not
R32847:32857 Poly <> fmostlytrue def
R32863:32867 Basics <> false constr
def 32904:32920 <> override_example3
R32937:32939 Coq.Init.Logic <> :type_scope:x_'='_x not
R32924:32934 Poly <> fmostlytrue def
R32940:32943 Basics <> true constr
def 32980:32996 <> override_example4
R33013:33015 Coq.Init.Logic <> :type_scope:x_'='_x not
R33000:33010 Poly <> fmostlytrue def
R33016:33020 Basics <> false constr
prf 33321:33336 <> override_example
R33350:33353 Basics <> bool ind
R33391:33393 Coq.Init.Logic <> :type_scope:x_'='_x not
R33360:33367 Poly <> override def
R33384:33387 Basics <> true constr
R33370:33377 Poly <> constfun def
R33379:33379 Poly <> b var
R33394:33394 Poly <> b var
prf 34419:34436 <> unfold_example_bad
R34480:34482 Coq.Init.Logic <> :type_scope:x_'='_x not
R34476:34478 Basics <> :nat_scope:x_'+'_x not
R34469:34473 Poly <> plus3 def
R34475:34475 Poly <> n var
R34484:34486 Basics <> :nat_scope:x_'+'_x not
R34483:34483 Poly <> m var
R34459:34461 Coq.Init.Logic <> :type_scope:x_'='_x not
R34455:34457 Basics <> :nat_scope:x_'+'_x not
R34458:34458 Poly <> n var
R34462:34462 Poly <> m var
prf 34850:34863 <> unfold_example
R34907:34909 Coq.Init.Logic <> :type_scope:x_'='_x not
R34903:34905 Basics <> :nat_scope:x_'+'_x not
R34896:34900 Poly <> plus3 def
R34902:34902 Poly <> n var
R34911:34913 Basics <> :nat_scope:x_'+'_x not
R34910:34910 Poly <> m var
R34886:34888 Coq.Init.Logic <> :type_scope:x_'='_x not
R34882:34884 Basics <> :nat_scope:x_'+'_x not
R34885:34885 Poly <> n var
R34889:34889 Poly <> m var
R34949:34953 Poly <> plus3 def
prf 35170:35180 <> override_eq
R35212:35212 Poly <> X var
R35207:35209 Coq.Init.Datatypes <> nat ind
R35236:35238 Coq.Init.Logic <> :type_scope:x_'='_x not
R35219:35226 Poly <> override def
R35232:35232 Poly <> x var
R35230:35230 Poly <> k var
R35228:35228 Poly <> f var
R35235:35235 Poly <> k var
R35239:35239 Poly <> x var
R35276:35283 Poly <> override def
R35299:35310 Induction <> beq_nat_refl prfax
R35299:35310 Induction <> beq_nat_refl prfax
prf 35508:35519 <> override_neq
R35561:35561 Poly <> X var
R35556:35558 Coq.Init.Datatypes <> nat ind
R35630:35632 Coq.Init.Logic <> :type_scope:x_'='_x not
R35610:35617 Poly <> override def
R35624:35625 Poly <> x2 var
R35621:35622 Poly <> k2 var
R35619:35619 Poly <> f var
R35628:35629 Poly <> k1 var
R35633:35634 Poly <> x1 var
R35595:35597 Coq.Init.Logic <> :type_scope:x_'='_x not
R35582:35588 Basics <> beq_nat def
R35593:35594 Poly <> k1 var
R35590:35591 Poly <> k2 var
R35598:35602 Basics <> false constr
R35571:35573 Coq.Init.Logic <> :type_scope:x_'='_x not
R35567:35567 Poly <> f var
R35569:35570 Poly <> k1 var
R35574:35575 Poly <> x1 var
def 36129:36139 <> fold_length
R36157:36160 Poly <> list ind
R36162:36162 Poly <> X var
R36167:36169 Coq.Init.Datatypes <> nat ind
R36176:36179 Poly <> fold def
R36198:36198 Poly <> l var
R36193:36193 Coq.Init.Datatypes <> S constr
R36195:36195 Poly <> n var
def 36212:36228 <> test_fold_length1
R36251:36253 Coq.Init.Logic <> :type_scope:x_'='_x not
R36232:36242 Poly <> fold_length def
R36244:36244 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36246:36246 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36248:36248 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36250:36250 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 36339:36357 <> fold_length_correct
R36375:36378 Poly <> list ind
R36380:36380 Poly <> X var
R36399:36401 Coq.Init.Logic <> :type_scope:x_'='_x not
R36386:36396 Poly <> fold_length def
R36398:36398 Poly <> l var
R36402:36407 Poly <> length def
R36409:36409 Poly <> l var
def 36588:36595 <> fold_map
R36618:36618 Poly <> Y var
R36613:36613 Poly <> X var
R36626:36629 Poly <> list ind
R36631:36631 Poly <> X var
R36636:36639 Poly <> list ind
R36641:36641 Poly <> Y var
R36665:36669 Basics <> admit prfax
mod 37308:37313 <> Church
def 37658:37660 Church nat
R37699:37699 Poly <> X var
R37694:37694 Poly <> X var
R37688:37688 Poly <> X var
R37683:37683 Poly <> X var
def 37837:37839 Church one
R37843:37845 Poly Church nat def
R37878:37878 Poly <> X var
R37873:37873 Poly <> X var
R37886:37886 Poly <> X var
R37892:37892 Poly <> f var
R37894:37894 Poly <> x var
def 37963:37965 Church two
R37969:37971 Poly Church nat def
R38003:38003 Poly <> X var
R37998:37998 Poly <> X var
R38011:38011 Poly <> X var
R38017:38017 Poly <> f var
R38020:38020 Poly <> f var
R38022:38022 Poly <> x var
def 38176:38179 Church zero
R38183:38185 Poly Church nat def
R38217:38217 Poly <> X var
R38212:38212 Poly <> X var
R38225:38225 Poly <> X var
R38231:38231 Poly <> x var
def 38499:38503 Church three
R38507:38509 Poly Church nat def
R38515:38524 Poly Church doit3times def
def 38735:38738 Church succ
R38745:38747 Poly Church nat def
R38752:38754 Poly Church nat def
R38780:38784 Basics <> admit prfax
def 38796:38801 Church succ_1
R38814:38816 Coq.Init.Logic <> :type_scope:x_'='_x not
R38805:38808 Poly Church succ def
R38810:38813 Poly Church zero def
R38817:38819 Poly Church one def
def 38867:38872 Church succ_2
R38884:38886 Coq.Init.Logic <> :type_scope:x_'='_x not
R38876:38879 Poly Church succ def
R38881:38883 Poly Church one def
R38887:38889 Poly Church two def
def 38937:38942 Church succ_3
R38954:38956 Coq.Init.Logic <> :type_scope:x_'='_x not
R38946:38949 Poly Church succ def
R38951:38953 Poly Church two def
R38957:38961 Poly Church three def
def 39052:39055 Church plus
R39064:39066 Poly Church nat def
R39071:39073 Poly Church nat def
R39099:39103 Basics <> admit prfax
def 39115:39120 Church plus_1
R39137:39139 Coq.Init.Logic <> :type_scope:x_'='_x not
R39124:39127 Poly Church plus def
R39134:39136 Poly Church one def
R39129:39132 Poly Church zero def
R39140:39142 Poly Church one def
def 39190:39195 Church plus_2
R39213:39215 Coq.Init.Logic <> :type_scope:x_'='_x not
R39199:39202 Poly Church plus def
R39208:39212 Poly Church three def
R39204:39206 Poly Church two def
R39216:39219 Poly Church plus def
R39227:39229 Poly Church two def
R39221:39225 Poly Church three def
def 39277:39282 Church plus_3
R39313:39315 Coq.Init.Logic <> :type_scope:x_'='_x not
R39288:39291 Poly Church plus def
R39308:39312 Poly Church three def
R39294:39297 Poly Church plus def
R39303:39305 Poly Church two def
R39299:39301 Poly Church two def
R39316:39319 Poly Church plus def
R39326:39329 Poly Church plus def
R39337:39341 Poly Church three def
R39331:39335 Poly Church three def
R39321:39323 Poly Church one def
def 39416:39419 Church mult
R39428:39430 Poly Church nat def
R39435:39437 Poly Church nat def
R39464:39468 Basics <> admit prfax
def 39480:39485 Church mult_1
R39501:39503 Coq.Init.Logic <> :type_scope:x_'='_x not
R39489:39492 Poly Church mult def
R39498:39500 Poly Church one def
R39494:39496 Poly Church one def
R39504:39506 Poly Church one def
def 39554:39559 Church mult_2
R39591:39593 Coq.Init.Logic <> :type_scope:x_'='_x not
R39563:39566 Poly Church mult def
R39574:39577 Poly Church plus def
R39585:39589 Poly Church three def
R39579:39583 Poly Church three def
R39568:39571 Poly Church zero def
R39594:39597 Poly Church zero def
def 39645:39650 Church mult_3
R39668:39670 Coq.Init.Logic <> :type_scope:x_'='_x not
R39654:39657 Poly Church mult def
R39663:39667 Poly Church three def
R39659:39661 Poly Church two def
R39671:39674 Poly Church plus def
R39682:39686 Poly Church three def
R39676:39680 Poly Church three def
def 40009:40011 Church exp
R40020:40022 Poly Church nat def
R40027:40029 Poly Church nat def
R40055:40059 Basics <> admit prfax
def 40071:40075 Church exp_1
R40090:40092 Coq.Init.Logic <> :type_scope:x_'='_x not
R40079:40081 Poly Church exp def
R40087:40089 Poly Church two def
R40083:40085 Poly Church two def
R40093:40096 Poly Church plus def
R40102:40104 Poly Church two def
R40098:40100 Poly Church two def
def 40152:40156 Church exp_2
R40173:40175 Coq.Init.Logic <> :type_scope:x_'='_x not
R40160:40162 Poly Church exp def
R40170:40172 Poly Church two def
R40164:40168 Poly Church three def
R40176:40179 Poly Church plus def
R40207:40209 Poly Church one def
R40182:40185 Poly Church mult def
R40192:40195 Poly Church mult def
R40201:40203 Poly Church two def
R40197:40199 Poly Church two def
R40187:40189 Poly Church two def
def 40257:40261 Church exp_3
R40279:40281 Coq.Init.Logic <> :type_scope:x_'='_x not
R40265:40267 Poly Church exp def
R40275:40278 Poly Church zero def
R40269:40273 Poly Church three def
R40282:40284 Poly Church one def
R40328:40333 Poly Church <> mod
