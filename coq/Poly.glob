DIGEST 29a4d577340cb73b13f51167c4bbcc6b
FPoly
R354:358 Lists <> <> lib
ind 905:912 <> boollist
constr 928:935 <> bool_nil
constr 952:960 <> bool_cons
R939:946 Poly <> boollist ind
R984:991 Poly <> boollist ind
R972:979 Poly <> boollist ind
R964:967 Basics <> bool ind
ind 1478:1481 <> list
constr 1506:1508 <> nil
constr 1523:1526 <> cons
R1512:1515 Poly <> list ind
R1545:1548 Poly <> list ind
R1535:1538 Poly <> list ind
R2741:2743 Poly <> nil constr
R2793:2796 Poly <> cons constr
R3204:3207 Poly <> cons constr
R3216:3219 Poly <> cons constr
R3228:3230 Poly <> nil constr
R3232:3234 Coq.Init.Datatypes <> nat ind
R3221:3223 Coq.Init.Datatypes <> nat ind
R3209:3211 Coq.Init.Datatypes <> nat ind
def 3627:3632 <> length
R3646:3649 Poly <> list ind
R3651:3651 Poly <> X var
R3656:3658 Coq.Init.Datatypes <> nat ind
R3671:3671 Poly <> l var
R3682:3684 Poly <> nil constr
R3700:3703 Poly <> cons constr
R3712:3712 Coq.Init.Datatypes <> S constr
R3715:3720 Poly <> length def
R3722:3722 Poly <> X var
def 4259:4270 <> test_length1
R4324:4326 Coq.Init.Logic <> :type_scope:x_'='_x not
R4278:4283 Poly <> length def
R4290:4293 Poly <> cons constr
R4302:4305 Poly <> cons constr
R4314:4316 Poly <> nil constr
R4318:4320 Coq.Init.Datatypes <> nat ind
R4307:4309 Coq.Init.Datatypes <> nat ind
R4295:4297 Coq.Init.Datatypes <> nat ind
R4285:4287 Coq.Init.Datatypes <> nat ind
def 4483:4494 <> test_length2
R4541:4543 Coq.Init.Logic <> :type_scope:x_'='_x not
R4502:4507 Poly <> length def
R4515:4518 Poly <> cons constr
R4531:4533 Poly <> nil constr
R4535:4538 Basics <> bool ind
R4525:4528 Basics <> true constr
R4520:4523 Basics <> bool ind
R4509:4512 Basics <> bool ind
def 4720:4722 <> app
R4744:4747 Poly <> list ind
R4749:4749 Poly <> X var
R4771:4774 Poly <> list ind
R4776:4776 Poly <> X var
R4790:4791 Poly <> l1 var
R4802:4804 Poly <> nil constr
R4814:4815 Poly <> l2 var
R4821:4824 Poly <> cons constr
R4833:4836 Poly <> cons constr
R4843:4845 Poly <> app def
R4851:4852 Poly <> l2 var
R4847:4847 Poly <> X var
R4838:4838 Poly <> X var
def 4872:4875 <> snoc
R4889:4892 Poly <> list ind
R4894:4894 Poly <> X var
R4900:4900 Poly <> X var
R4906:4909 Poly <> list ind
R4911:4911 Poly <> X var
R4925:4925 Poly <> l var
R4936:4938 Poly <> nil constr
R4948:4951 Poly <> cons constr
R4958:4960 Poly <> nil constr
R4962:4962 Poly <> X var
R4955:4955 Poly <> v var
R4953:4953 Poly <> X var
R4969:4972 Poly <> cons constr
R4981:4984 Poly <> cons constr
R4991:4994 Poly <> snoc def
R5000:5000 Poly <> v var
R4996:4996 Poly <> X var
R4986:4986 Poly <> X var
def 5020:5022 <> rev
R5036:5039 Poly <> list ind
R5041:5041 Poly <> X var
R5046:5049 Poly <> list ind
R5051:5051 Poly <> X var
R5064:5064 Poly <> l var
R5075:5077 Poly <> nil constr
R5087:5089 Poly <> nil constr
R5091:5091 Poly <> X var
R5097:5100 Poly <> cons constr
R5109:5112 Poly <> snoc def
R5117:5119 Poly <> rev def
R5121:5121 Poly <> X var
R5114:5114 Poly <> X var
def 5146:5154 <> test_rev1
R5205:5210 Coq.Init.Logic <> :type_scope:x_'='_x not
R5244:5244 Coq.Init.Logic <> :type_scope:x_'='_x not
R5162:5164 Poly <> rev def
R5171:5174 Poly <> cons constr
R5183:5186 Poly <> cons constr
R5195:5197 Poly <> nil constr
R5199:5201 Coq.Init.Datatypes <> nat ind
R5188:5190 Coq.Init.Datatypes <> nat ind
R5176:5178 Coq.Init.Datatypes <> nat ind
R5166:5168 Coq.Init.Datatypes <> nat ind
R5211:5214 Poly <> cons constr
R5223:5226 Poly <> cons constr
R5235:5237 Poly <> nil constr
R5239:5241 Coq.Init.Datatypes <> nat ind
R5228:5230 Coq.Init.Datatypes <> nat ind
R5216:5218 Coq.Init.Datatypes <> nat ind
def 5282:5290 <> test_rev2
R5314:5316 Coq.Init.Logic <> :type_scope:x_'='_x not
R5295:5297 Poly <> rev def
R5305:5307 Poly <> nil constr
R5309:5312 Basics <> bool ind
R5299:5302 Basics <> bool ind
R5317:5319 Poly <> nil constr
R5321:5324 Basics <> bool ind
mod 5361:5369 <> MumbleBaz
ind 5492:5497 MumbleBaz mumble
constr 5513:5513 MumbleBaz a
constr 5528:5528 MumbleBaz b
constr 5560:5560 MumbleBaz c
R5517:5522 Poly <> mumble ind
R5549:5554 Poly <> mumble ind
R5542:5544 Coq.Init.Datatypes <> nat ind
R5532:5537 Poly <> mumble ind
R5564:5569 Poly <> mumble ind
ind 5582:5588 MumbleBaz grumble
constr 5613:5613 MumbleBaz d
constr 5641:5641 MumbleBaz e
R5627:5633 Poly <> grumble ind
R5617:5622 Poly MumbleBaz mumble ind
R5650:5656 Poly <> grumble ind
ind 6053:6055 MumbleBaz baz
constr 6072:6072 MumbleBaz x
constr 6092:6092 MumbleBaz y
R6083:6085 Poly <> baz ind
R6076:6078 Poly <> baz ind
R6111:6113 Poly <> baz ind
R6103:6106 Basics <> bool ind
R6096:6098 Poly <> baz ind
R6205:6213 Poly MumbleBaz <> mod
def 6476:6479 <> app'
R6491:6494 Poly <> list ind
R6496:6496 Poly <> X var
R6509:6510 Poly <> l1 var
R6521:6523 Poly <> nil constr
R6533:6534 Poly <> l2 var
R6540:6543 Poly <> cons constr
R6552:6555 Poly <> cons constr
R6562:6565 Poly <> app' def
R6571:6572 Poly <> l2 var
R6567:6567 Poly <> X var
R6557:6557 Poly <> X var
R6662:6665 Poly <> app' def
R6729:6731 Poly <> app def
def 9376:9382 <> length'
R9396:9399 Poly <> list ind
R9401:9401 Poly <> X var
R9406:9408 Coq.Init.Datatypes <> nat ind
R9421:9421 Poly <> l var
R9432:9434 Poly <> nil constr
R9450:9453 Poly <> cons constr
R9462:9462 Coq.Init.Datatypes <> S constr
R9465:9471 Poly <> length' def
def 9760:9766 <> list123
R9773:9776 Poly <> cons constr
R9785:9788 Poly <> cons constr
R9797:9800 Poly <> cons constr
R9809:9811 Poly <> nil constr
R9813:9815 Coq.Init.Datatypes <> nat ind
R9802:9804 Coq.Init.Datatypes <> nat ind
R9790:9792 Coq.Init.Datatypes <> nat ind
R9778:9780 Coq.Init.Datatypes <> nat ind
def 9889:9896 <> list123'
R9901:9904 Poly <> cons constr
R9911:9914 Poly <> cons constr
R9921:9924 Poly <> cons constr
R9931:9933 Poly <> nil constr
R10419:10421 Poly <> nil constr
R10419:10421 Poly <> nil constr
R10438:10441 Poly <> cons constr
R10438:10441 Poly <> cons constr
R10523:10528 Poly <> length def
R10523:10528 Poly <> length def
R10547:10549 Poly <> app def
R10547:10549 Poly <> app def
R10572:10574 Poly <> rev def
R10572:10574 Poly <> rev def
R10594:10597 Poly <> snoc def
R10594:10597 Poly <> snoc def
def 10659:10667 <> list123''
R10672:10675 Poly <> cons constr
R10680:10683 Poly <> cons constr
R10688:10691 Poly <> cons constr
R10695:10697 Poly <> nil constr
R10709:10714 Poly <> length def
R10716:10724 Poly <> list123'' def
def 10918:10925 <> length''
R10939:10942 Poly <> list ind
R10944:10944 Poly <> X var
R10949:10951 Coq.Init.Datatypes <> nat ind
R10964:10964 Poly <> l var
R10975:10977 Poly <> nil constr
R10993:10996 Poly <> cons constr
R11005:11005 Coq.Init.Datatypes <> S constr
R11008:11015 Poly <> length'' def
def 12042:12046 <> mynil
R12050:12053 Poly <> list ind
R12055:12057 Coq.Init.Datatypes <> nat ind
R12062:12064 Poly <> nil constr
R12193:12195 Poly <> nil constr
def 12210:12215 <> mynil'
R12221:12223 Poly <> nil constr
R12225:12227 Coq.Init.Datatypes <> nat ind
R12520:12523 Poly <> cons constr
not 12507 <> ::x_'::'_x
R12605:12607 Poly <> nil constr
not 12596 <> ::'['_']'
R12640:12643 Poly <> cons constr
R12651:12654 Poly <> cons constr
R12658:12659 Poly <> ::'['_']' not
not 12619 <> ::'['_x_';'_'..'_';'_x_']'
R12689:12691 Poly <> app def
not 12676 <> ::x_'++'_x
def 12824:12833 <> list123'''
R12838:12838 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12840:12841 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12843:12844 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12846:12846 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 13199:13204 <> repeat
R13222:13222 Poly <> X var
R13234:13236 Coq.Init.Datatypes <> nat ind
R13241:13244 Poly <> list ind
R13246:13246 Poly <> X var
R13272:13276 Basics <> admit prfax
def 13288:13299 <> test_repeat1
R13317:13319 Coq.Init.Logic <> :type_scope:x_'='_x not
R13304:13309 Poly <> repeat def
R13311:13314 Basics <> true constr
R13320:13323 Poly <> cons constr
R13331:13334 Poly <> cons constr
R13341:13343 Poly <> nil constr
R13336:13339 Basics <> true constr
R13325:13328 Basics <> true constr
prf 13386:13392 <> nil_app
R13420:13423 Poly <> list ind
R13425:13425 Poly <> X var
R13438:13440 Coq.Init.Logic <> :type_scope:x_'='_x not
R13430:13432 Poly <> app def
R13437:13437 Poly <> l var
R13434:13435 Poly <> ::'['_']' not
R13441:13441 Poly <> l var
prf 13491:13498 <> rev_snoc
R13551:13551 Poly <> X var
R13586:13589 Poly <> list ind
R13591:13591 Poly <> X var
R13610:13612 Coq.Init.Logic <> :type_scope:x_'='_x not
R13596:13598 Poly <> rev def
R13601:13604 Poly <> snoc def
R13608:13608 Poly <> v var
R13606:13606 Poly <> s var
R13614:13618 Poly <> ::x_'::'_x not
R13624:13624 Poly <> ::x_'::'_x not
R13613:13613 Poly <> v var
R13619:13621 Poly <> rev def
R13623:13623 Poly <> s var
prf 13674:13687 <> rev_involutive
R13719:13722 Poly <> list ind
R13724:13724 Poly <> X var
R13740:13742 Coq.Init.Logic <> :type_scope:x_'='_x not
R13729:13731 Poly <> rev def
R13734:13736 Poly <> rev def
R13738:13738 Poly <> l var
R13743:13743 Poly <> l var
prf 13791:13806 <> snoc_with_append
R13867:13870 Poly <> list ind
R13872:13872 Poly <> X var
R13911:13911 Poly <> X var
R13933:13935 Coq.Init.Logic <> :type_scope:x_'='_x not
R13916:13919 Poly <> snoc def
R13932:13932 Poly <> v var
R13924:13927 Poly <> ::x_'++'_x not
R13922:13923 Poly <> l1 var
R13928:13929 Poly <> l2 var
R13938:13942 Poly <> ::x_'++'_x not
R13952:13952 Poly <> ::x_'++'_x not
R13936:13937 Poly <> l1 var
R13943:13946 Poly <> snoc def
R13951:13951 Poly <> v var
R13948:13949 Poly <> l2 var
ind 14276:14279 <> prod
constr 14306:14309 <> pair
R14323:14326 Poly <> prod ind
R14344:14347 Poly <> pair constr
R14344:14347 Poly <> pair constr
R14494:14497 Poly <> pair constr
not 14478 <> ::'('_x_','_x_')'
R14630:14633 Poly <> prod ind
not 14618 <> :type_scope:x_'*'_x
def 15256:15258 <> fst
R15279:15281 Poly <> :type_scope:x_'*'_x not
R15278:15278 Poly <> X var
R15282:15282 Poly <> Y var
R15287:15287 Poly <> X var
R15300:15300 Poly <> p var
R15307:15307 Poly <> ::'('_x_','_x_')' not
R15309:15309 Poly <> ::'('_x_','_x_')' not
R15311:15311 Poly <> ::'('_x_','_x_')' not
def 15335:15337 <> snd
R15358:15360 Poly <> :type_scope:x_'*'_x not
R15357:15357 Poly <> X var
R15361:15361 Poly <> Y var
R15366:15366 Poly <> Y var
R15379:15379 Poly <> p var
R15386:15386 Poly <> ::'('_x_','_x_')' not
R15388:15388 Poly <> ::'('_x_','_x_')' not
R15390:15390 Poly <> ::'('_x_','_x_')' not
def 15731:15737 <> combine
R15758:15761 Poly <> list ind
R15763:15763 Poly <> X var
R15772:15775 Poly <> list ind
R15777:15777 Poly <> Y var
R15793:15796 Poly <> list ind
R15800:15800 Poly <> :type_scope:x_'*'_x not
R15799:15799 Poly <> X var
R15801:15801 Poly <> Y var
R15815:15815 Poly <> ::'('_x_','_x_')' not
R15818:15818 Poly <> ::'('_x_','_x_')' not
R15821:15821 Poly <> ::'('_x_','_x_')' not
R15816:15817 Poly <> lx var
R15819:15820 Poly <> ly var
R15832:15832 Poly <> ::'('_x_','_x_')' not
R15835:15835 Poly <> ::'('_x_','_x_')' not
R15837:15837 Poly <> ::'('_x_','_x_')' not
R15833:15834 Poly <> ::'['_']' not
R15842:15843 Poly <> ::'['_']' not
R15849:15849 Poly <> ::'('_x_','_x_')' not
R15851:15851 Poly <> ::'('_x_','_x_')' not
R15854:15854 Poly <> ::'('_x_','_x_')' not
R15852:15853 Poly <> ::'['_']' not
R15859:15860 Poly <> ::'['_']' not
R15866:15866 Poly <> ::'('_x_','_x_')' not
R15872:15873 Poly <> ::'('_x_','_x_')' not
R15879:15879 Poly <> ::'('_x_','_x_')' not
R15868:15869 Poly <> ::x_'::'_x not
R15875:15876 Poly <> ::x_'::'_x not
R15889:15893 Poly <> ::x_'::'_x not
R15907:15907 Poly <> ::x_'::'_x not
R15884:15884 Poly <> ::'('_x_','_x_')' not
R15886:15886 Poly <> ::'('_x_','_x_')' not
R15888:15888 Poly <> ::'('_x_','_x_')' not
R15894:15900 Poly <> combine def
def 16617:16621 <> split
R16652:16655 Poly <> list ind
R16659:16659 Poly <> :type_scope:x_'*'_x not
R16658:16658 Poly <> X var
R16660:16660 Poly <> Y var
R16677:16677 Poly <> :type_scope:x_'*'_x not
R16684:16688 Poly <> :type_scope:x_'*'_x not
R16695:16695 Poly <> :type_scope:x_'*'_x not
R16678:16681 Poly <> list ind
R16683:16683 Poly <> X var
R16689:16692 Poly <> list ind
R16694:16694 Poly <> Y var
R16719:16723 Basics <> admit prfax
def 16735:16744 <> test_split
R16776:16778 Coq.Init.Logic <> :type_scope:x_'='_x not
R16749:16753 Poly <> split def
R16755:16755 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16765:16765 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16775:16775 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16766:16766 Poly <> ::'('_x_','_x_')' not
R16768:16768 Poly <> ::'('_x_','_x_')' not
R16774:16774 Poly <> ::'('_x_','_x_')' not
R16769:16773 Basics <> false constr
R16756:16756 Poly <> ::'('_x_','_x_')' not
R16758:16758 Poly <> ::'('_x_','_x_')' not
R16764:16764 Poly <> ::'('_x_','_x_')' not
R16759:16763 Basics <> false constr
R16779:16779 Poly <> ::'('_x_','_x_')' not
R16785:16785 Poly <> ::'('_x_','_x_')' not
R16799:16799 Poly <> ::'('_x_','_x_')' not
R16780:16780 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16782:16782 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16784:16784 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16786:16786 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16792:16792 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16798:16798 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16793:16797 Basics <> false constr
R16787:16791 Basics <> false constr
ind 17107:17112 <> option
constr 17137:17140 <> Some
constr 17162:17165 <> None
R17149:17154 Poly <> option ind
R17169:17174 Poly <> option ind
R17190:17193 Poly <> Some constr
R17190:17193 Poly <> Some constr
R17213:17216 Poly <> None constr
R17213:17216 Poly <> None constr
def 17338:17342 <> index
R17360:17362 Coq.Init.Datatypes <> nat ind
R17385:17388 Poly <> list ind
R17390:17390 Poly <> X var
R17395:17400 Poly <> option ind
R17402:17402 Poly <> X var
R17415:17415 Poly <> l var
R17426:17427 Poly <> ::'['_']' not
R17432:17435 Poly <> None constr
R17442:17445 Poly <> ::x_'::'_x not
R17455:17461 Basics <> beq_nat def
R17465:17465 Coq.Init.Datatypes <> O constr
R17463:17463 Poly <> n var
R17484:17488 Poly <> index def
R17491:17494 Coq.Init.Peano <> pred def
R17496:17496 Poly <> n var
R17472:17475 Poly <> Some constr
def 17518:17528 <> test_index1
R17552:17555 Coq.Init.Logic <> :type_scope:x_'='_x not
R17535:17539 Poly <> index def
R17543:17543 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17545:17545 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17547:17547 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17549:17549 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17551:17551 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17556:17559 Poly <> Some constr
def 17598:17608 <> test_index2
R17633:17636 Coq.Init.Logic <> :type_scope:x_'='_x not
R17615:17619 Poly <> index def
R17624:17624 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17628:17628 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17632:17632 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17629:17629 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17631:17631 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17625:17625 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17627:17627 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17637:17640 Poly <> Some constr
R17642:17642 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17644:17644 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 17681:17691 <> test_index3
R17713:17716 Coq.Init.Logic <> :type_scope:x_'='_x not
R17698:17702 Poly <> index def
R17707:17707 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17712:17712 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17708:17711 Basics <> true constr
R17717:17720 Poly <> None constr
def 17973:17978 <> hd_opt
R17996:17999 Poly <> list ind
R18001:18001 Poly <> X var
R18007:18012 Poly <> option ind
R18014:18014 Poly <> X var
R18040:18044 Basics <> admit prfax
R18175:18180 Poly <> hd_opt def
def 18192:18203 <> test_hd_opt1
R18220:18222 Coq.Init.Logic <> :type_scope:x_'='_x not
R18208:18213 Poly <> hd_opt def
R18215:18215 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18217:18217 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18219:18219 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18223:18226 Poly <> Some constr
def 18269:18280 <> test_hd_opt2
R18303:18306 Coq.Init.Logic <> :type_scope:x_'='_x not
R18286:18291 Poly <> hd_opt def
R18294:18294 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18298:18298 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18302:18302 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18299:18299 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18301:18301 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18295:18295 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18297:18297 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18307:18310 Poly <> Some constr
R18312:18312 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18314:18314 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 18972:18981 <> doit3times
R18998:18998 Poly <> X var
R18995:18995 Poly <> X var
R19004:19004 Poly <> X var
R19009:19009 Poly <> X var
R19016:19016 Poly <> f var
R19019:19019 Poly <> f var
R19022:19022 Poly <> f var
R19024:19024 Poly <> n var
R19183:19192 Poly <> doit3times def
def 19264:19278 <> test_doit3times
R19302:19304 Coq.Init.Logic <> :type_scope:x_'='_x not
R19281:19290 Poly <> doit3times def
R19292:19299 Basics <> minustwo def
def 19343:19358 <> test_doit3times'
R19381:19383 Coq.Init.Logic <> :type_scope:x_'='_x not
R19361:19370 Poly <> doit3times def
R19377:19380 Basics <> true constr
R19372:19375 Basics <> negb def
R19384:19388 Basics <> false constr
R19682:19685 Coq.Init.Peano <> plus def
def 20407:20411 <> plus3
R20416:20419 Coq.Init.Peano <> plus def
R20430:20434 Poly <> plus3 def
def 20446:20455 <> test_plus3
R20469:20471 Coq.Init.Logic <> :type_scope:x_'='_x not
R20462:20466 Poly <> plus3 def
def 20509:20519 <> test_plus3'
R20543:20545 Coq.Init.Logic <> :type_scope:x_'='_x not
R20525:20534 Poly <> doit3times def
R20536:20540 Poly <> plus3 def
def 20583:20594 <> test_plus3''
R20620:20622 Coq.Init.Logic <> :type_scope:x_'='_x not
R20599:20608 Poly <> doit3times def
R20611:20614 Coq.Init.Peano <> plus def
def 21547:21556 <> prod_curry
R21589:21589 Poly <> Z var
R21581:21583 Poly <> :type_scope:x_'*'_x not
R21580:21580 Poly <> X var
R21584:21584 Poly <> Y var
R21597:21597 Poly <> X var
R21605:21605 Poly <> Y var
R21610:21610 Poly <> Z var
R21615:21615 Poly <> f var
R21617:21617 Poly <> ::'('_x_','_x_')' not
R21619:21620 Poly <> ::'('_x_','_x_')' not
R21622:21622 Poly <> ::'('_x_','_x_')' not
R21618:21618 Poly <> x var
R21621:21621 Poly <> y var
def 21767:21778 <> prod_uncurry
R21812:21812 Poly <> Z var
R21807:21807 Poly <> Y var
R21802:21802 Poly <> X var
R21821:21823 Poly <> :type_scope:x_'*'_x not
R21820:21820 Poly <> X var
R21824:21824 Poly <> Y var
R21829:21829 Poly <> Z var
R21855:21859 Basics <> admit prfax
R21997:22006 Poly <> prod_curry def
R22016:22027 Poly <> prod_uncurry def
prf 22039:22051 <> uncurry_curry
R22092:22092 Poly <> Z var
R22087:22087 Poly <> Y var
R22082:22082 Poly <> X var
R22133:22135 Coq.Init.Logic <> :type_scope:x_'='_x not
R22102:22111 Poly <> prod_curry def
R22132:22132 Poly <> y var
R22130:22130 Poly <> x var
R22114:22125 Poly <> prod_uncurry def
R22127:22127 Poly <> f var
R22136:22136 Poly <> f var
R22140:22140 Poly <> y var
R22138:22138 Poly <> x var
prf 22190:22202 <> curry_uncurry
R22275:22275 Poly <> Z var
R22266:22268 Poly <> :type_scope:x_'*'_x not
R22265:22265 Poly <> X var
R22269:22269 Poly <> Y var
R22284:22286 Poly <> :type_scope:x_'*'_x not
R22283:22283 Poly <> X var
R22287:22287 Poly <> Y var
R22322:22324 Coq.Init.Logic <> :type_scope:x_'='_x not
R22293:22304 Poly <> prod_uncurry def
R22321:22321 Poly <> p var
R22307:22316 Poly <> prod_curry def
R22318:22318 Poly <> f var
R22325:22325 Poly <> f var
R22327:22327 Poly <> p var
def 22727:22732 <> filter
R22753:22756 Basics <> bool ind
R22750:22750 Poly <> X var
R22762:22765 Poly <> list ind
R22767:22767 Poly <> X var
R22789:22792 Poly <> list ind
R22794:22794 Poly <> X var
R22808:22808 Poly <> l var
R22819:22820 Poly <> ::'['_']' not
R22829:22830 Poly <> ::'['_']' not
R22837:22840 Poly <> ::x_'::'_x not
R22849:22852 Poly <> test var
R22917:22922 Poly <> filter def
R22924:22927 Poly <> test var
R22862:22866 Poly <> ::x_'::'_x not
R22880:22880 Poly <> ::x_'::'_x not
R22867:22872 Poly <> filter def
R22874:22877 Poly <> test var
def 23108:23119 <> test_filter1
R23144:23146 Coq.Init.Logic <> :type_scope:x_'='_x not
R23122:23127 Poly <> filter def
R23135:23135 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23137:23137 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23139:23139 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23141:23141 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23143:23143 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23129:23133 Basics <> evenb def
R23147:23147 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23149:23149 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23151:23151 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23203:23213 <> length_is_1
R23231:23234 Poly <> list ind
R23236:23236 Poly <> X var
R23241:23244 Basics <> bool ind
R23251:23257 Basics <> beq_nat def
R23260:23265 Poly <> length def
R23267:23267 Poly <> l var
def 23282:23293 <> test_filter2
R23368:23372 Coq.Init.Logic <> :type_scope:x_'='_x not
R23300:23305 Poly <> filter def
R23330:23331 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23338:23339 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23343:23344 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23348:23349 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23357:23358 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23361:23362 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23366:23367 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23363:23363 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23365:23365 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23359:23360 Poly <> ::'['_']' not
R23350:23350 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23352:23352 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23354:23354 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23356:23356 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23345:23345 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23347:23347 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23340:23340 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23342:23342 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23332:23332 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23334:23335 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23337:23337 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23307:23317 Poly <> length_is_1 def
R23373:23374 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23378:23379 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23383:23384 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23388:23389 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23385:23385 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23387:23387 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23380:23380 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23382:23382 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23375:23375 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23377:23377 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23560:23575 <> countoddmembers'
R23580:23583 Poly <> list ind
R23585:23587 Coq.Init.Datatypes <> nat ind
R23592:23594 Coq.Init.Datatypes <> nat ind
R23601:23606 Poly <> length def
R23609:23614 Poly <> filter def
R23621:23621 Poly <> l var
R23616:23619 Basics <> oddb def
def 23634:23655 <> test_countoddmembers'1
R23690:23692 Coq.Init.Logic <> :type_scope:x_'='_x not
R23660:23675 Poly <> countoddmembers' def
R23677:23677 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23679:23679 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23681:23681 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23683:23683 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23685:23685 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23687:23687 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23689:23689 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23730:23751 <> test_countoddmembers'2
R23780:23782 Coq.Init.Logic <> :type_scope:x_'='_x not
R23756:23771 Poly <> countoddmembers' def
R23773:23773 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23775:23775 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23777:23777 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23779:23779 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23820:23841 <> test_countoddmembers'3
R23866:23868 Coq.Init.Logic <> :type_scope:x_'='_x not
R23846:23861 Poly <> countoddmembers' def
R23863:23865 Poly <> nil constr
def 24735:24748 <> test_anon_fun'
R24782:24784 Coq.Init.Logic <> :type_scope:x_'='_x not
R24753:24762 Poly <> doit3times def
R24775:24777 Basics <> :nat_scope:x_'*'_x not
R24774:24774 Poly <> n var
R24778:24778 Poly <> n var
def 24921:24933 <> test_filter2'
R25028:25032 Coq.Init.Logic <> :type_scope:x_'='_x not
R24940:24945 Poly <> filter def
R24990:24991 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24998:24999 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25003:25004 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25008:25009 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25017:25018 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25021:25022 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25026:25027 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25023:25023 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25025:25025 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25019:25020 Poly <> ::'['_']' not
R25010:25010 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25012:25012 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25014:25014 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25016:25016 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25005:25005 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25007:25007 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25000:25000 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25002:25002 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24992:24992 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24994:24995 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24997:24997 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24957:24963 Basics <> beq_nat def
R24966:24971 Poly <> length def
R24973:24973 Poly <> l var
R25033:25034 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25038:25039 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25043:25044 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25048:25049 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25045:25045 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25047:25047 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25040:25040 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25042:25042 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25035:25035 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25037:25037 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25352:25366 <> filter_even_gt7
R25373:25376 Poly <> list ind
R25378:25380 Coq.Init.Datatypes <> nat ind
R25385:25388 Poly <> list ind
R25390:25392 Coq.Init.Datatypes <> nat ind
R25418:25422 Basics <> admit prfax
def 25434:25455 <> test_filter_even_gt7_1
R25496:25498 Coq.Init.Logic <> :type_scope:x_'='_x not
R25461:25475 Poly <> filter_even_gt7 def
R25477:25477 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25479:25479 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25481:25481 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25483:25483 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25485:25485 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25488:25488 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25490:25490 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25493:25493 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25495:25495 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25499:25499 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25502:25502 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25505:25505 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25507:25507 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25549:25570 <> test_filter_even_gt7_2
R25606:25608 Coq.Init.Logic <> :type_scope:x_'='_x not
R25576:25590 Poly <> filter_even_gt7 def
R25592:25592 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25594:25594 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25596:25596 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25598:25598 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25601:25601 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25605:25605 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25609:25610 Poly <> ::'['_']' not
def 26264:26272 <> partition
R26298:26301 Basics <> bool ind
R26293:26293 Poly <> X var
R26309:26312 Poly <> list ind
R26314:26314 Poly <> X var
R26346:26348 Poly <> :type_scope:x_'*'_x not
R26340:26343 Poly <> list ind
R26345:26345 Poly <> X var
R26349:26352 Poly <> list ind
R26354:26354 Poly <> X var
R26378:26382 Basics <> admit prfax
def 26394:26408 <> test_partition1
R26437:26439 Coq.Init.Logic <> :type_scope:x_'='_x not
R26411:26419 Poly <> partition def
R26426:26426 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26428:26428 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26430:26430 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26432:26432 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26434:26434 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26436:26436 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26421:26424 Basics <> oddb def
R26440:26440 Poly <> ::'('_x_','_x_')' not
R26448:26449 Poly <> ::'('_x_','_x_')' not
R26455:26455 Poly <> ::'('_x_','_x_')' not
R26441:26441 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26443:26443 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26445:26445 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26447:26447 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26450:26450 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26452:26452 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26454:26454 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26495:26509 <> test_partition2
R26546:26548 Coq.Init.Logic <> :type_scope:x_'='_x not
R26512:26520 Poly <> partition def
R26539:26539 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26541:26541 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26543:26543 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26545:26545 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26532:26536 Basics <> false constr
R26549:26549 Poly <> ::'('_x_','_x_')' not
R26552:26553 Poly <> ::'('_x_','_x_')' not
R26561:26561 Poly <> ::'('_x_','_x_')' not
R26550:26551 Poly <> ::'['_']' not
R26554:26554 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26556:26556 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26558:26558 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26560:26560 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26750:26752 <> map
R26771:26771 Poly <> Y var
R26768:26768 Poly <> X var
R26777:26780 Poly <> list ind
R26782:26782 Poly <> X var
R26801:26804 Poly <> list ind
R26806:26806 Poly <> Y var
R26820:26820 Poly <> l var
R26831:26832 Poly <> ::'['_']' not
R26841:26842 Poly <> ::'['_']' not
R26849:26852 Poly <> ::x_'::'_x not
R26858:26858 Poly <> ::x_'::'_x not
R26862:26867 Poly <> ::x_'::'_x not
R26875:26875 Poly <> ::x_'::'_x not
R26859:26859 Poly <> f var
R26868:26870 Poly <> map def
R26872:26872 Poly <> f var
def 27103:27111 <> test_map1
R27134:27136 Coq.Init.Logic <> :type_scope:x_'='_x not
R27114:27116 Poly <> map def
R27127:27127 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27129:27129 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27131:27131 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27133:27133 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27119:27122 Coq.Init.Peano <> plus def
R27137:27137 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27139:27139 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27141:27141 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27143:27143 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27452:27460 <> test_map2
R27481:27483 Coq.Init.Logic <> :type_scope:x_'='_x not
R27463:27465 Poly <> map def
R27472:27472 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27474:27474 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27476:27476 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27478:27478 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27480:27480 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27467:27470 Basics <> oddb def
R27484:27484 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27490:27490 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27495:27495 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27501:27501 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27506:27506 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27502:27505 Basics <> true constr
R27496:27500 Basics <> false constr
R27491:27494 Basics <> true constr
R27485:27489 Basics <> false constr
def 27693:27701 <> test_map3
R27749:27753 Coq.Init.Logic <> :type_scope:x_'='_x not
R27708:27710 Poly <> map def
R27740:27740 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27742:27742 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27744:27744 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27746:27746 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27748:27748 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27722:27722 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27730:27730 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27737:27737 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27731:27734 Basics <> oddb def
R27736:27736 Poly <> n var
R27723:27727 Basics <> evenb def
R27729:27729 Poly <> n var
R27754:27754 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27767:27767 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27780:27780 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27793:27793 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27806:27806 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27794:27794 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27800:27800 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27805:27805 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27801:27804 Basics <> true constr
R27795:27799 Basics <> false constr
R27781:27781 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27786:27786 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27792:27792 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27787:27791 Basics <> false constr
R27782:27785 Basics <> true constr
R27768:27768 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27774:27774 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27779:27779 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27775:27778 Basics <> true constr
R27769:27773 Basics <> false constr
R27755:27755 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27760:27760 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27766:27766 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27761:27765 Basics <> false constr
R27756:27759 Basics <> true constr
prf 28005:28011 <> map_rev
R28045:28045 Poly <> Y var
R28040:28040 Poly <> X var
R28053:28056 Poly <> list ind
R28058:28058 Poly <> X var
R28077:28079 Coq.Init.Logic <> :type_scope:x_'='_x not
R28064:28066 Poly <> map def
R28071:28073 Poly <> rev def
R28075:28075 Poly <> l var
R28068:28068 Poly <> f var
R28080:28082 Poly <> rev def
R28085:28087 Poly <> map def
R28091:28091 Poly <> l var
R28089:28089 Poly <> f var
def 28593:28600 <> flat_map
R28621:28624 Poly <> list ind
R28626:28626 Poly <> Y var
R28616:28616 Poly <> X var
R28632:28635 Poly <> list ind
R28637:28637 Poly <> X var
R28662:28665 Poly <> list ind
R28667:28667 Poly <> Y var
R28694:28698 Basics <> admit prfax
def 28710:28723 <> test_flat_map1
R28763:28767 Coq.Init.Logic <> :type_scope:x_'='_x not
R28728:28735 Poly <> flat_map def
R28756:28756 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28758:28758 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28760:28760 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28762:28762 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28747:28747 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28749:28749 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28751:28751 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28753:28753 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28752:28752 Poly <> n var
R28750:28750 Poly <> n var
R28748:28748 Poly <> n var
R28768:28768 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28770:28771 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28773:28774 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28776:28777 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28779:28780 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28782:28783 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28785:28786 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28788:28789 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28791:28792 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28794:28794 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 28999:29008 <> option_map
R29033:29033 Poly <> Y var
R29028:29028 Poly <> X var
R29042:29047 Poly <> option ind
R29049:29049 Poly <> X var
R29076:29081 Poly <> option ind
R29083:29083 Poly <> Y var
R29096:29097 Poly <> xo var
R29110:29113 Poly <> None constr
R29118:29121 Poly <> None constr
R29129:29132 Poly <> Some constr
R29139:29142 Poly <> Some constr
R29145:29145 Poly <> f var
def 29967:29970 <> fold
R29993:29993 Poly <> Y var
R29990:29990 Poly <> Y var
R29987:29987 Poly <> X var
R29999:30002 Poly <> list ind
R30004:30004 Poly <> X var
R30010:30010 Poly <> Y var
R30015:30015 Poly <> Y var
R30028:30028 Poly <> l var
R30039:30041 Poly <> nil constr
R30046:30046 Poly <> b var
R30053:30056 Poly <> ::x_'::'_x not
R30062:30062 Poly <> f var
R30067:30070 Poly <> fold def
R30076:30076 Poly <> b var
R30072:30072 Poly <> f var
R30560:30563 Poly <> fold def
R30565:30568 Basics <> andb def
def 30630:30642 <> fold_example1
R30667:30669 Coq.Init.Logic <> :type_scope:x_'='_x not
R30646:30649 Poly <> fold def
R30656:30656 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30658:30658 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30660:30660 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30662:30662 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30664:30664 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30651:30654 Coq.Init.Peano <> mult def
def 30708:30720 <> fold_example2
R30761:30763 Coq.Init.Logic <> :type_scope:x_'='_x not
R30724:30727 Poly <> fold def
R30757:30760 Basics <> true constr
R30734:30734 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30739:30739 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30744:30744 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30750:30750 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30755:30755 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30751:30754 Basics <> true constr
R30745:30749 Basics <> false constr
R30740:30743 Basics <> true constr
R30735:30738 Basics <> true constr
R30729:30732 Basics <> andb def
R30764:30768 Basics <> false constr
def 30805:30817 <> fold_example3
R30852:30854 Coq.Init.Logic <> :type_scope:x_'='_x not
R30821:30824 Poly <> fold def
R30850:30851 Poly <> ::'['_']' not
R30831:30831 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30835:30835 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30838:30838 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30844:30844 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30848:30848 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30845:30845 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30847:30847 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30839:30839 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30841:30841 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30843:30843 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30836:30837 Poly <> ::'['_']' not
R30832:30832 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30834:30834 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30826:30828 Poly <> app def
R30855:30855 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30857:30857 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30859:30859 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30861:30861 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30863:30863 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 31780:31787 <> constfun
R31803:31803 Poly <> X var
R31813:31813 Poly <> X var
R31808:31810 Coq.Init.Datatypes <> nat ind
R31827:31829 Coq.Init.Datatypes <> nat ind
R31835:31835 Poly <> x var
def 31850:31854 <> ftrue
R31859:31866 Poly <> constfun def
R31868:31871 Basics <> true constr
def 31883:31899 <> constfun_example1
R31910:31912 Coq.Init.Logic <> :type_scope:x_'='_x not
R31903:31907 Poly <> ftrue def
R31913:31916 Basics <> true constr
def 31953:31969 <> constfun_example2
R31988:31990 Coq.Init.Logic <> :type_scope:x_'='_x not
R31974:31981 Poly <> constfun def
def 32334:32341 <> override
R32362:32362 Poly <> X var
R32357:32359 Coq.Init.Datatypes <> nat ind
R32368:32370 Coq.Init.Datatypes <> nat ind
R32376:32376 Poly <> X var
R32386:32386 Poly <> X var
R32381:32383 Coq.Init.Datatypes <> nat ind
R32400:32402 Coq.Init.Datatypes <> nat ind
R32411:32417 Basics <> beq_nat def
R32421:32422 Poly <> k' var
R32419:32419 Poly <> k var
R32436:32436 Poly <> f var
R32438:32439 Poly <> k' var
R32429:32429 Poly <> x var
def 32638:32648 <> fmostlytrue
R32653:32660 Poly <> override def
R32689:32693 Basics <> false constr
R32663:32670 Poly <> override def
R32680:32684 Basics <> false constr
R32672:32676 Poly <> ftrue def
def 32717:32733 <> override_example1
R32750:32752 Coq.Init.Logic <> :type_scope:x_'='_x not
R32737:32747 Poly <> fmostlytrue def
R32753:32756 Basics <> true constr
def 32793:32809 <> override_example2
R32826:32828 Coq.Init.Logic <> :type_scope:x_'='_x not
R32813:32823 Poly <> fmostlytrue def
R32829:32833 Basics <> false constr
def 32870:32886 <> override_example3
R32903:32905 Coq.Init.Logic <> :type_scope:x_'='_x not
R32890:32900 Poly <> fmostlytrue def
R32906:32909 Basics <> true constr
def 32946:32962 <> override_example4
R32979:32981 Coq.Init.Logic <> :type_scope:x_'='_x not
R32966:32976 Poly <> fmostlytrue def
R32982:32986 Basics <> false constr
prf 33287:33302 <> override_example
R33316:33319 Basics <> bool ind
R33357:33359 Coq.Init.Logic <> :type_scope:x_'='_x not
R33326:33333 Poly <> override def
R33350:33353 Basics <> true constr
R33336:33343 Poly <> constfun def
R33345:33345 Poly <> b var
R33360:33360 Poly <> b var
prf 34385:34402 <> unfold_example_bad
R34446:34448 Coq.Init.Logic <> :type_scope:x_'='_x not
R34442:34444 Basics <> :nat_scope:x_'+'_x not
R34435:34439 Poly <> plus3 def
R34441:34441 Poly <> n var
R34450:34452 Basics <> :nat_scope:x_'+'_x not
R34449:34449 Poly <> m var
R34425:34427 Coq.Init.Logic <> :type_scope:x_'='_x not
R34421:34423 Basics <> :nat_scope:x_'+'_x not
R34424:34424 Poly <> n var
R34428:34428 Poly <> m var
prf 34816:34829 <> unfold_example
R34873:34875 Coq.Init.Logic <> :type_scope:x_'='_x not
R34869:34871 Basics <> :nat_scope:x_'+'_x not
R34862:34866 Poly <> plus3 def
R34868:34868 Poly <> n var
R34877:34879 Basics <> :nat_scope:x_'+'_x not
R34876:34876 Poly <> m var
R34852:34854 Coq.Init.Logic <> :type_scope:x_'='_x not
R34848:34850 Basics <> :nat_scope:x_'+'_x not
R34851:34851 Poly <> n var
R34855:34855 Poly <> m var
R34915:34919 Poly <> plus3 def
prf 35136:35146 <> override_eq
R35178:35178 Poly <> X var
R35173:35175 Coq.Init.Datatypes <> nat ind
R35202:35204 Coq.Init.Logic <> :type_scope:x_'='_x not
R35185:35192 Poly <> override def
R35198:35198 Poly <> x var
R35196:35196 Poly <> k var
R35194:35194 Poly <> f var
R35201:35201 Poly <> k var
R35205:35205 Poly <> x var
R35242:35249 Poly <> override def
R35265:35276 Induction <> beq_nat_refl prfax
R35265:35276 Induction <> beq_nat_refl prfax
prf 35474:35485 <> override_neq
R35527:35527 Poly <> X var
R35522:35524 Coq.Init.Datatypes <> nat ind
R35596:35598 Coq.Init.Logic <> :type_scope:x_'='_x not
R35576:35583 Poly <> override def
R35590:35591 Poly <> x2 var
R35587:35588 Poly <> k2 var
R35585:35585 Poly <> f var
R35594:35595 Poly <> k1 var
R35599:35600 Poly <> x1 var
R35561:35563 Coq.Init.Logic <> :type_scope:x_'='_x not
R35548:35554 Basics <> beq_nat def
R35559:35560 Poly <> k1 var
R35556:35557 Poly <> k2 var
R35564:35568 Basics <> false constr
R35537:35539 Coq.Init.Logic <> :type_scope:x_'='_x not
R35533:35533 Poly <> f var
R35535:35536 Poly <> k1 var
R35540:35541 Poly <> x1 var
def 36095:36105 <> fold_length
R36123:36126 Poly <> list ind
R36128:36128 Poly <> X var
R36133:36135 Coq.Init.Datatypes <> nat ind
R36142:36145 Poly <> fold def
R36164:36164 Poly <> l var
R36159:36159 Coq.Init.Datatypes <> S constr
R36161:36161 Poly <> n var
def 36178:36194 <> test_fold_length1
R36217:36219 Coq.Init.Logic <> :type_scope:x_'='_x not
R36198:36208 Poly <> fold_length def
R36210:36210 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36212:36212 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36214:36214 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36216:36216 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 36305:36323 <> fold_length_correct
R36341:36344 Poly <> list ind
R36346:36346 Poly <> X var
R36365:36367 Coq.Init.Logic <> :type_scope:x_'='_x not
R36352:36362 Poly <> fold_length def
R36364:36364 Poly <> l var
R36368:36373 Poly <> length def
R36375:36375 Poly <> l var
def 36554:36561 <> fold_map
R36584:36584 Poly <> Y var
R36579:36579 Poly <> X var
R36592:36595 Poly <> list ind
R36597:36597 Poly <> X var
R36602:36605 Poly <> list ind
R36607:36607 Poly <> Y var
R36631:36635 Basics <> admit prfax
mod 37274:37279 <> Church
def 37624:37626 Church nat
R37665:37665 Poly <> X var
R37660:37660 Poly <> X var
R37654:37654 Poly <> X var
R37649:37649 Poly <> X var
def 37803:37805 Church one
R37809:37811 Poly Church nat def
R37844:37844 Poly <> X var
R37839:37839 Poly <> X var
R37852:37852 Poly <> X var
R37858:37858 Poly <> f var
R37860:37860 Poly <> x var
def 37929:37931 Church two
R37935:37937 Poly Church nat def
R37969:37969 Poly <> X var
R37964:37964 Poly <> X var
R37977:37977 Poly <> X var
R37983:37983 Poly <> f var
R37986:37986 Poly <> f var
R37988:37988 Poly <> x var
def 38142:38145 Church zero
R38149:38151 Poly Church nat def
R38183:38183 Poly <> X var
R38178:38178 Poly <> X var
R38191:38191 Poly <> X var
R38197:38197 Poly <> x var
def 38465:38469 Church three
R38473:38475 Poly Church nat def
R38481:38490 Poly Church doit3times def
def 38701:38704 Church succ
R38711:38713 Poly Church nat def
R38718:38720 Poly Church nat def
R38746:38750 Basics <> admit prfax
def 38762:38767 Church succ_1
R38780:38782 Coq.Init.Logic <> :type_scope:x_'='_x not
R38771:38774 Poly Church succ def
R38776:38779 Poly Church zero def
R38783:38785 Poly Church one def
def 38833:38838 Church succ_2
R38850:38852 Coq.Init.Logic <> :type_scope:x_'='_x not
R38842:38845 Poly Church succ def
R38847:38849 Poly Church one def
R38853:38855 Poly Church two def
def 38903:38908 Church succ_3
R38920:38922 Coq.Init.Logic <> :type_scope:x_'='_x not
R38912:38915 Poly Church succ def
R38917:38919 Poly Church two def
R38923:38927 Poly Church three def
def 39018:39021 Church plus
R39030:39032 Poly Church nat def
R39037:39039 Poly Church nat def
R39065:39069 Basics <> admit prfax
def 39081:39086 Church plus_1
R39103:39105 Coq.Init.Logic <> :type_scope:x_'='_x not
R39090:39093 Poly Church plus def
R39100:39102 Poly Church one def
R39095:39098 Poly Church zero def
R39106:39108 Poly Church one def
def 39156:39161 Church plus_2
R39179:39181 Coq.Init.Logic <> :type_scope:x_'='_x not
R39165:39168 Poly Church plus def
R39174:39178 Poly Church three def
R39170:39172 Poly Church two def
R39182:39185 Poly Church plus def
R39193:39195 Poly Church two def
R39187:39191 Poly Church three def
def 39243:39248 Church plus_3
R39279:39281 Coq.Init.Logic <> :type_scope:x_'='_x not
R39254:39257 Poly Church plus def
R39274:39278 Poly Church three def
R39260:39263 Poly Church plus def
R39269:39271 Poly Church two def
R39265:39267 Poly Church two def
R39282:39285 Poly Church plus def
R39292:39295 Poly Church plus def
R39303:39307 Poly Church three def
R39297:39301 Poly Church three def
R39287:39289 Poly Church one def
def 39382:39385 Church mult
R39394:39396 Poly Church nat def
R39401:39403 Poly Church nat def
R39430:39434 Basics <> admit prfax
def 39446:39451 Church mult_1
R39467:39469 Coq.Init.Logic <> :type_scope:x_'='_x not
R39455:39458 Poly Church mult def
R39464:39466 Poly Church one def
R39460:39462 Poly Church one def
R39470:39472 Poly Church one def
def 39520:39525 Church mult_2
R39557:39559 Coq.Init.Logic <> :type_scope:x_'='_x not
R39529:39532 Poly Church mult def
R39540:39543 Poly Church plus def
R39551:39555 Poly Church three def
R39545:39549 Poly Church three def
R39534:39537 Poly Church zero def
R39560:39563 Poly Church zero def
def 39611:39616 Church mult_3
R39634:39636 Coq.Init.Logic <> :type_scope:x_'='_x not
R39620:39623 Poly Church mult def
R39629:39633 Poly Church three def
R39625:39627 Poly Church two def
R39637:39640 Poly Church plus def
R39648:39652 Poly Church three def
R39642:39646 Poly Church three def
def 39975:39977 Church exp
R39986:39988 Poly Church nat def
R39993:39995 Poly Church nat def
R40021:40025 Basics <> admit prfax
def 40037:40041 Church exp_1
R40056:40058 Coq.Init.Logic <> :type_scope:x_'='_x not
R40045:40047 Poly Church exp def
R40053:40055 Poly Church two def
R40049:40051 Poly Church two def
R40059:40062 Poly Church plus def
R40068:40070 Poly Church two def
R40064:40066 Poly Church two def
def 40118:40122 Church exp_2
R40139:40141 Coq.Init.Logic <> :type_scope:x_'='_x not
R40126:40128 Poly Church exp def
R40136:40138 Poly Church two def
R40130:40134 Poly Church three def
R40142:40145 Poly Church plus def
R40173:40175 Poly Church one def
R40148:40151 Poly Church mult def
R40158:40161 Poly Church mult def
R40167:40169 Poly Church two def
R40163:40165 Poly Church two def
R40153:40155 Poly Church two def
def 40223:40227 Church exp_3
R40245:40247 Coq.Init.Logic <> :type_scope:x_'='_x not
R40231:40233 Poly Church exp def
R40241:40244 Poly Church zero def
R40235:40239 Poly Church three def
R40248:40250 Poly Church one def
R40294:40299 Poly Church <> mod
